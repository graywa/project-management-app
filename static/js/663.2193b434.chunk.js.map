{"version":3,"file":"static/js/663.2193b434.chunk.js","mappings":"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","sources":["components/board-modal/assets/cross.svg","webpack://project-management-app/./src/components/confirm-modal/ConfirmModal.module.scss?6a96","components/confirm-modal/ConfirmModal.tsx","webpack://project-management-app/./src/components/header/Header.module.scss?6989","webpack://project-management-app/./src/components/board-modal/BoardModal.module.scss?05b1","components/board-modal/BoardModal.tsx","webpack://project-management-app/./src/components/column-modal/ColumnModal.module.scss?b37f","components/column-modal/ColumnModal.tsx","components/header/Header.tsx"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCross(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 8L24 24M8 24L24 8L8 24Z\",\n    stroke: \"#121212\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCross);\nexport default __webpack_public_path__ + \"static/media/cross.ac7ab1b174358f1b639b740facce8426.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"ConfirmModal_modal__Lae9W\",\"open\":\"ConfirmModal_open__MsdSV\",\"modal__content\":\"ConfirmModal_modal__content__BfM5+\",\"error\":\"ConfirmModal_error__hVan5\",\"sub_btn\":\"ConfirmModal_sub_btn__pN7Ut\",\"loader\":\"ConfirmModal_loader__6SSac\",\"buttonDelete\":\"ConfirmModal_buttonDelete__dFhBQ\"};","import React, { FC } from 'react';\r\nimport styles from './ConfirmModal.module.scss';\r\nimport cn from 'classnames';\r\nimport { useAppDispatch } from '../../redux-hooks/redux-hooks';\r\nimport { deleteColumn } from '../../api/columns';\r\nimport { deleteBoard } from '../../api/boards';\r\nimport { deleteUser } from '../../api/auth';\r\nimport { IUser } from './../../models/IUser';\r\nimport { IBoard } from './../../models/IBoard';\r\nimport { deleteTask } from '../../api/tasks';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { IColumn } from '../../models/IColumn';\r\nimport { ITask } from '../../models/ITask';\r\n\r\ninterface IColumnData {\r\n  boardId: string;\r\n  columnId: string;\r\n  columns: IColumn[];\r\n}\r\ninterface ITaskData {\r\n  boardId: string;\r\n  columnId: string;\r\n  taskId: string;\r\n  tasks: ITask[];\r\n}\r\n\r\ntype IData = IBoard | IColumnData | IUser | ITaskData;\r\n\r\ninterface IProps {\r\n  isOpenModal: boolean;\r\n  setIsOpenModal: (val: boolean) => void;\r\n  data: IData;\r\n  action: 'delete_board' | 'delete_column' | 'delete_user' | 'delete_task';\r\n}\r\n\r\nconst ConfirmModal: FC<IProps> = ({ isOpenModal, setIsOpenModal, data, action }) => {\r\n  const dispatch = useAppDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const clickHandler = async () => {\r\n    if (action === 'delete_board') dispatch(deleteBoard(data as IBoard));\r\n    if (action === 'delete_column') dispatch(deleteColumn(data as IColumnData));\r\n    if (action === 'delete_user') dispatch(deleteUser(data as IUser));\r\n    if (action === 'delete_task') dispatch(deleteTask(data as ITaskData));\r\n    setIsOpenModal(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={cn(styles.modal, { [styles.open]: isOpenModal })}\r\n      onClick={() => setIsOpenModal(false)}\r\n    >\r\n      <div className={styles.modal__content} onClick={(e) => e.stopPropagation()}>\r\n        <h3>{t('really_delete')}?</h3>\r\n        <div className={styles.sub_btn}>\r\n          <button className={styles.buttonDelete} onClick={clickHandler}>\r\n            {t('delete')}\r\n          </button>\r\n          <button className={styles.buttonDelete} onClick={() => setIsOpenModal(false)}>\r\n            {t('cancel')}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmModal;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"header_wrapper\":\"Header_header_wrapper__RiTKW\",\"scroll\":\"Header_scroll__JATtV\",\"header\":\"Header_header__R9Eye\",\"burger-btn\":\"Header_burger-btn__8tnu8\",\"burger-menu\":\"Header_burger-menu__NcJdh\",\"logo\":\"Header_logo__wIRtU\",\"header__logo\":\"Header_header__logo__BuWXs\",\"login\":\"Header_login__fWopq\",\"plus_btn\":\"Header_plus_btn__gHfpW\",\"header__btns\":\"Header_header__btns__dNQAN\",\"account\":\"Header_account__Iq14i\",\"burger-modal\":\"Header_burger-modal__+Js37\",\"hidden\":\"Header_hidden__KAfR6\",\"burger-btn_animation\":\"Header_burger-btn_animation__fxl7u\",\"burger-menu__btns\":\"Header_burger-menu__btns__+-83S\",\"burger-menu_hidden\":\"Header_burger-menu_hidden__hNZkS\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"BoardModal_modal__aNGcm\",\"open\":\"BoardModal_open__cRtGI\",\"modal__content\":\"BoardModal_modal__content__5cYmx\",\"error\":\"BoardModal_error__65ZvJ\",\"sub_btn\":\"BoardModal_sub_btn__YqpsU\",\"loader\":\"BoardModal_loader__JSdbg\"};","import React, { FC } from 'react';\r\nimport styles from './BoardModal.module.scss';\r\nimport cn from 'classnames';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useAppDispatch, useAppSelector } from '../../redux-hooks/redux-hooks';\r\nimport { createBoard } from '../../api/boards';\r\nimport { useTranslation } from 'react-i18next';\r\nimport cross from './assets/cross.svg';\r\nimport LoadingAnimation from '../loading-animation/LoadingAnimation';\r\n\r\ninterface IProps {\r\n  isOpenBoard: boolean;\r\n  setIsOpenBoard: (val: boolean) => void;\r\n}\r\n\r\nconst BoardModal: FC<IProps> = ({ isOpenBoard, setIsOpenBoard }) => {\r\n  const dispatch = useAppDispatch();\r\n  const { token } = useAppSelector((state) => state.auth);\r\n  const { isLoading } = useAppSelector((state) => state.boards);\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div\r\n      className={cn(styles.modal, { [styles.open]: isOpenBoard })}\r\n      onClick={() => setIsOpenBoard(false)}\r\n    >\r\n      <div className={styles.modal__content} onClick={(e) => e.stopPropagation()}>\r\n        <img width={32} src={cross} alt=\"cross\" onClick={() => setIsOpenBoard(false)} />\r\n        <Formik\r\n          initialValues={{ title: '' }}\r\n          onSubmit={({ title }, { resetForm }) => {\r\n            dispatch(createBoard({ title, token }));\r\n            resetForm();\r\n          }}\r\n          validationSchema={Yup.object().shape({\r\n            title: Yup.string()\r\n              .min(4, t('must_be_more_than_4_characters'))\r\n              .required(t('title_is_required')),\r\n          })}\r\n        >\r\n          {({ handleSubmit }) => {\r\n            return (\r\n              <Form className={styles.form} onSubmit={handleSubmit}>\r\n                <label htmlFor=\"title\">\r\n                  {t('title_board')}\r\n                  <Field id=\"title\" name=\"title\" />\r\n                  <div className={styles.error}>\r\n                    <ErrorMessage name=\"title\" />\r\n                  </div>\r\n                </label>\r\n                <div className={styles.sub_btn}>\r\n                  <div className={styles.loader}>{isLoading && <LoadingAnimation />}</div>\r\n                  <button type=\"submit\" disabled={isLoading}>\r\n                    {t('create')}\r\n                  </button>\r\n                </div>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardModal;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"ColumnModal_modal__vVz18\",\"open\":\"ColumnModal_open__QP8u1\",\"modal__content\":\"ColumnModal_modal__content__rI0Ld\",\"error\":\"ColumnModal_error__8Eun-\",\"sub_btn\":\"ColumnModal_sub_btn__1g0Yq\",\"loader\":\"ColumnModal_loader__aAb2O\"};","import React, { FC } from 'react';\r\nimport styles from './ColumnModal.module.scss';\r\nimport cn from 'classnames';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useAppDispatch, useAppSelector } from '../../redux-hooks/redux-hooks';\r\nimport { addColumns } from '../../api/columns';\r\nimport LoadingAnimation from '../loading-animation/LoadingAnimation';\r\nimport { useTranslation } from 'react-i18next';\r\nimport cross from './../board-modal/assets/cross.svg';\r\n\r\ninterface IProps {\r\n  isOpenColumn: boolean;\r\n  setIsOpenColumn: (val: boolean) => void;\r\n}\r\n\r\nconst ColumnModal: FC<IProps> = ({ isOpenColumn, setIsOpenColumn }) => {\r\n  const dispatch = useAppDispatch();\r\n  const { isLoading, columns, boardId } = useAppSelector((state) => state.columns);\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div\r\n      className={cn(styles.modal, { [styles.open]: isOpenColumn })}\r\n      onClick={() => setIsOpenColumn(false)}\r\n    >\r\n      <div className={styles.modal__content} onClick={(e) => e.stopPropagation()}>\r\n        <img width={32} src={cross} alt=\"cross\" onClick={() => setIsOpenColumn(false)} />\r\n        <Formik\r\n          initialValues={{ titleColumn: '' }}\r\n          onSubmit={({ titleColumn: title }, { resetForm }) => {\r\n            const order = columns.length + 1;\r\n            dispatch(addColumns({ boardId: boardId, values: { order, title: title } }));\r\n            resetForm();\r\n          }}\r\n          validationSchema={Yup.object().shape({\r\n            titleColumn: Yup.string()\r\n              .min(3, t('must_be_more_than_3_characters'))\r\n              .max(12, t('must_be_less_than_12_characters'))\r\n              .required(t('title_is_required')),\r\n          })}\r\n        >\r\n          {({ handleSubmit }) => {\r\n            return (\r\n              <Form className={styles.form} onSubmit={handleSubmit}>\r\n                <label htmlFor=\"titleColumn\">\r\n                  {t('title_column')}\r\n                  <Field id=\"titleColumn\" name=\"titleColumn\" />\r\n                  <div className={styles.error}>\r\n                    <ErrorMessage name=\"titleColumn\" />\r\n                  </div>\r\n                </label>\r\n                <div className={styles.sub_btn}>\r\n                  <div className={styles.loader}>{isLoading && <LoadingAnimation />}</div>\r\n                  <button type=\"submit\" disabled={isLoading}>\r\n                    {t('create')}\r\n                  </button>\r\n                </div>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColumnModal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styles from './Header.module.scss';\r\nimport cn from 'classnames';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport CustomSelect from '../custom-select/CustomSelect';\r\nimport BoardModal from '../board-modal/BoardModal';\r\nimport { useAppDispatch, useAppSelector } from '../../redux-hooks/redux-hooks';\r\nimport { changeIsAuth } from '../../store/authSlice';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ColumnModal from '../column-modal/ColumnModal';\r\nimport logo from './../../pages/welcome-page/assets/vezha.png';\r\nimport user from './assets/user.png';\r\nimport plus from './assets/plus.png';\r\n\r\nconst Header = () => {\r\n  const [scroll, setScroll] = useState(false);\r\n  const [isOpenBoard, setIsOpenBoard] = useState(false);\r\n  const [isOpenColumn, setIsOpenColumn] = useState(false);\r\n  const [isOpenBurgerMenu, setIsOpenBurgerMenu] = useState(true);\r\n  const dispatch = useAppDispatch();\r\n  const { login } = useAppSelector((state) => state.auth);\r\n  const { t } = useTranslation();\r\n  const { pathname } = useLocation();\r\n  const { isCreateBoard } = useAppSelector((state) => state.boards);\r\n  const { isCreateColumn } = useAppSelector((state) => state.columns);\r\n\r\n  useEffect(() => {\r\n    const scrollHandler = () => {\r\n      setScroll(window.scrollY > 50);\r\n    };\r\n    window.addEventListener('scroll', scrollHandler);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setIsOpenBoard(false);\r\n  }, [isCreateBoard]);\r\n\r\n  useEffect(() => {\r\n    setIsOpenColumn(false);\r\n  }, [isCreateColumn]);\r\n\r\n  const signOutHandler = () => {\r\n    localStorage.setItem('token', '');\r\n    dispatch(changeIsAuth(false));\r\n  };\r\n\r\n  return (\r\n    <div className={cn(styles.header_wrapper, { [styles.scroll]: scroll })}>\r\n      <header className={styles.header}>\r\n        <Link to=\"/main\" className={styles.header__logo} title={t('go_main')}>\r\n          <img width={40} src={logo} alt=\"logo\" />\r\n          <span className={styles.logo}>Vezha</span>\r\n        </Link>\r\n\r\n        <div className={styles.header__btns}>\r\n          {pathname.includes('/board') && (\r\n            <button className={styles.plus_btn} onClick={() => setIsOpenColumn(true)}>\r\n              <img width={26} src={plus} alt=\"plus\" />\r\n              {t('add_column')}\r\n            </button>\r\n          )}\r\n          {pathname === '/main' && (\r\n            <button className={styles.plus_btn} onClick={() => setIsOpenBoard(true)}>\r\n              <img width={26} src={plus} alt=\"plus\" />\r\n              {t('create_new_board')}\r\n            </button>\r\n          )}\r\n\r\n          <div className={styles.account}>\r\n            <Link to=\"/profile\" className={styles.login} title={t('profile')}>\r\n              <img width={50} src={user} alt=\"user\" />\r\n              {login}\r\n            </Link>\r\n            <button onClick={signOutHandler}>{t('sign_out')}</button>\r\n            <CustomSelect />\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className={cn(styles['burger-btn'], {\r\n            [styles['burger-btn_animation']]: isOpenBurgerMenu,\r\n          })}\r\n          onClick={() => setIsOpenBurgerMenu(!isOpenBurgerMenu)}\r\n        >\r\n          <span></span>\r\n        </div>\r\n        <div\r\n          className={cn(styles['burger-modal'], {\r\n            [styles['hidden']]: isOpenBurgerMenu,\r\n          })}\r\n          onClick={() => setIsOpenBurgerMenu(true)}\r\n        >\r\n          <div\r\n            className={cn(styles['burger-menu'], {\r\n              [styles['burger-menu_hidden']]: isOpenBurgerMenu,\r\n            })}\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            <div className={styles['burger-menu__btns']}>\r\n              <button onClick={() => setIsOpenBurgerMenu(true)}>\r\n                <Link to=\"/profile\">{t('edit_profile')}</Link>\r\n              </button>\r\n              <button onClick={() => (signOutHandler(), setIsOpenBurgerMenu(true))}>\r\n                {t('sign_out')}\r\n              </button>\r\n              <CustomSelect />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <BoardModal isOpenBoard={isOpenBoard} setIsOpenBoard={setIsOpenBoard} />\r\n        <ColumnModal isOpenColumn={isOpenColumn} setIsOpenColumn={setIsOpenColumn} />\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n"],"names":["isOpenModal","setIsOpenModal","data","action","dispatch","useAppDispatch","t","useTranslation","clickHandler","deleteBoard","deleteColumn","deleteUser","deleteTask","className","cn","styles","onClick","e","stopPropagation","isOpenBoard","setIsOpenBoard","token","useAppSelector","state","auth","isLoading","boards","width","src","cross","alt","initialValues","title","onSubmit","resetForm","createBoard","validationSchema","Yup","shape","min","required","handleSubmit","htmlFor","id","name","LoadingAnimation","type","disabled","isOpenColumn","setIsOpenColumn","columns","boardId","titleColumn","order","length","addColumns","values","max","useState","scroll","setScroll","isOpenBurgerMenu","setIsOpenBurgerMenu","login","pathname","useLocation","isCreateBoard","isCreateColumn","useEffect","window","addEventListener","scrollY","signOutHandler","localStorage","setItem","changeIsAuth","to","logo","includes","plus","CustomSelect"],"sourceRoot":""}